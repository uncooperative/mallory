name: pull-request-builds

on:
  pull_request:
    branches:
      - github-actions-ci

jobs:
  pull-request-f34:
    runs-on: ubuntu-20.04
    container: vathpela/efi-ci:f34
    name: f34 build
    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: fedora_latest
          - arch: x64
            distro: fedora_latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        uses: uraimo/run-on-arch-action@v2.0.5
        with:
          # otherwise we are testing target branch instead of the PR branch (see pull_request_target trigger)
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: fetch-origin
        run: git fetch origin
        id: fetch-origin
      - name: Do the build
        run: make PREFIX=/usr LIBDIR=/usr/lib64 DESTDIR=/destdir EFIDIR=test ENABLE_HTTPBOOT=true ENABLE_SHIM_HASH=true clean all
        id: build
      - name: Install in /destdir
        run: make PREFIX=/usr LIBDIR=/usr/lib64 DESTDIR=/destdir EFIDIR=test ENABLE_HTTPBOOT=true ENABLE_SHIM_HASH=true install
        id: install
#      - name: Archive production artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: shim
#          path: |
#            /destdir
  pull-request-f33-x64:
    runs-on: ubuntu-20.04
    container: vathpela/efi-ci:f33
    name: f33 build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # otherwise we are testing target branch instead of the PR branch (see pull_request_target trigger)
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: Do the build
        run: make PREFIX=/usr LIBDIR=/usr/lib64 DESTDIR=/destdir EFIDIR=test ENABLE_HTTPBOOT=true ENABLE_SHIM_HASH=true clean all
        id: build
      - name: Install in /destdir
        run: make PREFIX=/usr LIBDIR=/usr/lib64 DESTDIR=/destdir EFIDIR=test ENABLE_HTTPBOOT=true ENABLE_SHIM_HASH=true install
        id: install
#      - name: Archive production artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: shim
#          path: |
#            /destdir
  pull-request-f32-x64:
    runs-on: ubuntu-20.04
    container: vathpela/efi-ci:f32
    name: f32 build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # otherwise we are testing target branch instead of the PR branch (see pull_request_target trigger)
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: Do the build
        run: make PREFIX=/usr LIBDIR=/usr/lib64 DESTDIR=/destdir EFIDIR=test ENABLE_HTTPBOOT=true ENABLE_SHIM_HASH=true clean all
        id: build
      - name: Install in /destdir
        run: make PREFIX=/usr LIBDIR=/usr/lib64 DESTDIR=/destdir EFIDIR=test ENABLE_HTTPBOOT=true ENABLE_SHIM_HASH=true install
        id: install
#      - name: Archive production artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: shim
#          path: |
#            /destdir
  pull-request-f31-x64:
    runs-on: ubuntu-20.04
    container: vathpela/efi-ci:f31
    name: f31 build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # otherwise we are testing target branch instead of the PR branch (see pull_request_target trigger)
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: Do the build
        run: make PREFIX=/usr LIBDIR=/usr/lib64 DESTDIR=/destdir EFIDIR=test ENABLE_HTTPBOOT=true ENABLE_SHIM_HASH=true clean all
        id: build
      - name: Install in /destdir
        run: make PREFIX=/usr LIBDIR=/usr/lib64 DESTDIR=/destdir EFIDIR=test ENABLE_HTTPBOOT=true ENABLE_SHIM_HASH=true install
        id: install
#      - name: Archive production artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: shim
#          path: |
#            /destdir
